{"ast":null,"code":"// src/services/ApiService.js\nimport axios from 'axios';\nconst api = axios.create({\n  withCredentials: true\n});\nconst ApiService = {\n  getDepartments: () => axios.get(`http://localhost:8080/api/department`),\n  deleteDepartment: departmentId => axios.delete(`http://localhost:8080/api/department/${departmentId}`),\n  addDepartment: departmentData => axios.post('http://localhost:8080/api/department', departmentData),\n  getEmployees: () => axios.get('http://localhost:8080/api/employee'),\n  addEmployee: employeeData => axios.post(`http://localhost:8080/api/employee`, employeeData),\n  deleteEmployee: employeeId => axios.delete(`http://localhost:8080/api/employee/${employeeId}`),\n  getEmployee: employeeId => axios.get(`http://localhost:8080/api/employee/${employeeId}`),\n  sendEmailToSelected: (selectedEmployees, emailData) => axios.post('http://localhost:8080/api/email/sendToSelected', {\n    selectedEmployees,\n    emailData\n  }),\n  getAllManagersByDepartment: async departmentID => {\n    try {\n      const response = await axios.get(`http://localhost:8080/api/employee/managersByDepartment?departmentID=${departmentID}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching managers by department:', error);\n      throw error;\n    }\n  },\n  getAllEmployeesByDepartment: async departmentID => {\n    try {\n      const response = await axios.get(`http://localhost:8080/api/employee/employeesByDepartment?departmentID=${departmentID}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching employees by department:', error);\n      throw error;\n    }\n  }\n};\nexport default ApiService;","map":{"version":3,"names":["axios","api","create","withCredentials","ApiService","getDepartments","get","deleteDepartment","departmentId","delete","addDepartment","departmentData","post","getEmployees","addEmployee","employeeData","deleteEmployee","employeeId","getEmployee","sendEmailToSelected","selectedEmployees","emailData","getAllManagersByDepartment","departmentID","response","data","error","console","getAllEmployeesByDepartment"],"sources":["D:/Facultate/Repo/director_app_SCD/src/services/ApiService.js"],"sourcesContent":["// src/services/ApiService.js\r\nimport axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    withCredentials: true,\r\n});\r\n\r\nconst ApiService = {\r\n    getDepartments: () => axios.get(`http://localhost:8080/api/department`),\r\n    deleteDepartment: (departmentId) => axios.delete(`http://localhost:8080/api/department/${departmentId}`),\r\n    addDepartment: (departmentData) => axios.post('http://localhost:8080/api/department', departmentData),\r\n    getEmployees: () => axios.get('http://localhost:8080/api/employee'),\r\n    addEmployee: (employeeData) => axios.post(`http://localhost:8080/api/employee`, employeeData),\r\n    deleteEmployee: (employeeId) => axios.delete(`http://localhost:8080/api/employee/${employeeId}`),\r\n    getEmployee: (employeeId) => axios.get(`http://localhost:8080/api/employee/${employeeId}`),\r\n    sendEmailToSelected: (selectedEmployees, emailData) =>\r\n        axios.post('http://localhost:8080/api/email/sendToSelected', { selectedEmployees, emailData }),\r\n    getAllManagersByDepartment: async (departmentID) => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:8080/api/employee/managersByDepartment?departmentID=${departmentID}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching managers by department:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    getAllEmployeesByDepartment: async (departmentID) => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:8080/api/employee/employeesByDepartment?departmentID=${departmentID}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching employees by department:', error);\r\n            throw error;\r\n        }\r\n    },\r\n};\r\n\r\nexport default ApiService;\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACrBC,eAAe,EAAE;AACrB,CAAC,CAAC;AAEF,MAAMC,UAAU,GAAG;EACfC,cAAc,EAAEA,CAAA,KAAML,KAAK,CAACM,GAAG,CAAE,sCAAqC,CAAC;EACvEC,gBAAgB,EAAGC,YAAY,IAAKR,KAAK,CAACS,MAAM,CAAE,wCAAuCD,YAAa,EAAC,CAAC;EACxGE,aAAa,EAAGC,cAAc,IAAKX,KAAK,CAACY,IAAI,CAAC,sCAAsC,EAAED,cAAc,CAAC;EACrGE,YAAY,EAAEA,CAAA,KAAMb,KAAK,CAACM,GAAG,CAAC,oCAAoC,CAAC;EACnEQ,WAAW,EAAGC,YAAY,IAAKf,KAAK,CAACY,IAAI,CAAE,oCAAmC,EAAEG,YAAY,CAAC;EAC7FC,cAAc,EAAGC,UAAU,IAAKjB,KAAK,CAACS,MAAM,CAAE,sCAAqCQ,UAAW,EAAC,CAAC;EAChGC,WAAW,EAAGD,UAAU,IAAKjB,KAAK,CAACM,GAAG,CAAE,sCAAqCW,UAAW,EAAC,CAAC;EAC1FE,mBAAmB,EAAEA,CAACC,iBAAiB,EAAEC,SAAS,KAC9CrB,KAAK,CAACY,IAAI,CAAC,gDAAgD,EAAE;IAAEQ,iBAAiB;IAAEC;EAAU,CAAC,CAAC;EAClGC,0BAA0B,EAAE,MAAOC,YAAY,IAAK;IAChD,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMxB,KAAK,CAACM,GAAG,CAAE,wEAAuEiB,YAAa,EAAC,CAAC;MACxH,OAAOC,QAAQ,CAACC,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAC9D,MAAMA,KAAK;IACf;EACJ,CAAC;EAEDE,2BAA2B,EAAE,MAAOL,YAAY,IAAK;IACjD,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMxB,KAAK,CAACM,GAAG,CAAE,yEAAwEiB,YAAa,EAAC,CAAC;MACzH,OAAOC,QAAQ,CAACC,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;MAC/D,MAAMA,KAAK;IACf;EACJ;AACJ,CAAC;AAED,eAAetB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}